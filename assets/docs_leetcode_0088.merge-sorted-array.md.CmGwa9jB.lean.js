import{_ as p,c as n,l as s,a as i,a4 as a,o as l}from"./chunks/framework.VzvPGsLx.js";const N=JSON.parse('{"title":"0088. 合并两个有序数组","description":"","frontmatter":{"title":"0088. 合并两个有序数组","date":"2024-05-03T00:00:00.000Z","tags":["LeetCode"]},"headers":[],"relativePath":"docs/leetcode/0088.merge-sorted-array.md","filePath":"docs/leetcode/0088.merge-sorted-array.md"}'),h={name:"docs/leetcode/0088.merge-sorted-array.md"},t=a("",18),e=s("code",null,"原地修改",-1),k=s("strong",null,"需要将 nums1 的前 m 个数组放到另一个数组中避免写指针写入的干扰",-1),r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},E={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.473ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2419 1000","aria-hidden":"true"},d=a("",1),g=[d],y=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"m"),s("mo",{stretchy:"false"},")")])],-1),c=s("strong",null,"后往前比较，并从后往前插入即可。",-1),m=a("",6),o={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},u={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.618ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2041 1000","aria-hidden":"true"},b=a("",1),F=[b],T=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])],-1),A=a("",3),Q={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},D={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"10.639ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 4702.4 1000","aria-hidden":"true"},C=a("",1),_=[C],v=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"M"),s("mo",null,"+"),s("mi",null,"N"),s("mo",{stretchy:"false"},")")])],-1),x={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},w={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.618ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2041 1000","aria-hidden":"true"},f=a("",1),B=[f],H=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])],-1);function L(M,V,j,S,P,q){return l(),n("div",null,[t,s("p",null,[i("但是 merge sort 很多时候，合并的时候我们通常是新建一个数组，但是这道题目要求的是"),e,i(".这就和 merge sort 的 merge 过程有点不同。这里要求原地修改。如果使用类似上面的方法，如果采用从头开始遍历，"),k,i("。 这样空间复杂度就是 "),s("mjx-container",r,[(l(),n("svg",E,g)),y]),i("。其实我们能只要从"),c]),m,s("ul",null,[s("li",null,[i("从后往前比较，并从后往前插入，这样可避免写指针影响，同时将空间复杂度降低到 "),s("mjx-container",o,[(l(),n("svg",u,F)),T])])]),A,s("ul",null,[s("li",null,[i("时间复杂度："),s("mjx-container",Q,[(l(),n("svg",D,_)),v])]),s("li",null,[i("空间复杂度："),s("mjx-container",x,[(l(),n("svg",w,B)),H])])])])}const I=p(h,[["render",L]]);export{N as __pageData,I as default};
