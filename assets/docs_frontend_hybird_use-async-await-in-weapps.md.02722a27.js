import{_ as a,o as e,c as s,V as n}from"./chunks/framework.4acca30d.js";const y=JSON.parse('{"title":"如何在微信小程序中使用 ES7 特性 async/await","description":"","frontmatter":{"title":"如何在微信小程序中使用 ES7 特性 async/await","catalog":true,"date":"2017-11-14T16:50:24.000Z","subtitle":null,"header-img":null,"tags":["Wechat"]},"headers":[],"relativePath":"docs/frontend/hybird/use-async-await-in-weapps.md","filePath":"docs/frontend/hybird/use-async-await-in-weapps.md"}'),t={name:"docs/frontend/hybird/use-async-await-in-weapps.md"},o=n('<h1 id="如何在微信小程序中使用-es7-特性-async-await" tabindex="-1">如何在微信小程序中使用 ES7 特性 async/await <a class="header-anchor" href="#如何在微信小程序中使用-es7-特性-async-await" aria-label="Permalink to &quot;如何在微信小程序中使用 ES7 特性 async/await&quot;">​</a></h1><h2 id="引入-generator-支撑库" tabindex="-1">引入 generator 支撑库 <a class="header-anchor" href="#引入-generator-支撑库" aria-label="Permalink to &quot;引入 generator 支撑库&quot;">​</a></h2><p>经过 Babel 转译后的代码，会把 <code>aysnc/await</code> 的功能通过类似 <code>co</code> 库的方式来实现，即要使用到 generator，所以，和我们使用 <code>co</code> 的时候一样，需要依赖一个 <code>regeneratorRuntime</code>，才能支持 <code>generator</code> 特性。我们可以使用 Facebook 开源的 <code>regenerator</code> 库。你可以通过 npm 来下载这个 regenerator 库：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">regenerator</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后将下载文件中名为 <code>regenerator-runtime</code> 的文件拿出来，放到我们的小程序代码中去。</p><h2 id="引入代码" tabindex="-1">引入代码 <a class="header-anchor" href="#引入代码" aria-label="Permalink to &quot;引入代码&quot;">​</a></h2><p>在需要使用 <code>async/await</code> 特性的代码文件中，引入 <code>regenerator</code> 库：</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> regeneratorRuntime </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../../utils/regenerator-runtime/runtime-module.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>然后，你就可以放心的在你的代码里使用 <code>async/await</code> 来写异步处理了。</p>',9),r=[o];function c(l,i,p,d,u,h){return e(),s("div",null,r)}const _=a(t,[["render",c]]);export{y as __pageData,_ as default};
