import{_ as l,c as i,l as s,a,a4 as n,o as e}from"./chunks/framework.VzvPGsLx.js";const M=JSON.parse('{"title":"算法专题：二分法（上）","description":"","frontmatter":{"title":"算法专题：二分法（上）","date":"2024-05-17T00:00:00.000Z","tags":["LeetCode"]},"headers":[],"relativePath":"docs/leetcode/thinkings/binary-search-1.md","filePath":"docs/leetcode/thinkings/binary-search-1.md"}'),p={name:"docs/leetcode/thinkings/binary-search-1.md"},t=n("",15),r=s("strong",null,"题目所有可能的解构成的集合",-1),h=s("code",null,"1,2,3,4,5",-1),o=s("code",null,"1，2，3，4，5",-1),k=s("strong",null,"一个数",-1),d=s("code",null,"1,2,3,4,5",-1),c=s("strong",null,"我们的目标就是在某个具体的情况判断其具体是哪个",-1),g={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},m={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.844ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2141 1000","aria-hidden":"true"},u=n("",1),b=[u],E=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1),y=n("",4),T=s("code",null,"x",-1),_={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},Q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.05ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.826ex",height:"1.872ex",role:"img",focusable:"false",viewBox:"0 -805.3 2133.1 827.3","aria-hidden":"true"},F=n("",1),x=[F],f=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msup",null,[s("mn",null,"10"),s("mo",null,"−")]),s("mn",null,"6")])],-1),A=s("code",null,"[1,x]",-1),v=n("",37);function C(D,w,B,S,q,P){return e(),i("div",null,[t,s("p",null,[a("解空间指的是"),r,a("。比如一个题目所有解的可能是 "),h,a("，但具体在某一种情况只能是其中某一个数（即可能是 "),o,a(" 中的"),k,a("）。那么这里的解空间就是 "),d,a(" 构成的集合，在某一个具体的情况下可能是其中任意一个值，"),c,a("。如果线性枚举所有的可能，就枚举这部分来说时间复杂度就是 "),s("mjx-container",g,[(e(),i("svg",m,b)),E]),a("。")]),y,s("p",null,[a("比如让你求一个数 "),T,a(" 的平方根，答案误差在 "),s("mjx-container",_,[(e(),i("svg",Q,x)),f]),a(" 次方都认为正确。这里容易知道其解空间大小可定义为 "),A,a("（当然可以定义地更精确，之后我们再讨论这个问题），其中解空间应该包括所有区间的实数，不仅仅是整数而已。这个时候解题思路和代码都没有太大变化，唯二需要变化的是：")]),v])}const H=l(p,[["render",C]]);export{M as __pageData,H as default};
