import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.a1e87edc.js";const h=JSON.parse('{"title":"CreateJS 笔记","description":"","frontmatter":{"title":"CreateJS 笔记","catalog":true,"date":"2016-10-03T16:50:24.000Z","subtitle":null,"header-img":null,"tags":["JavaScript","CreateJS"]},"headers":[],"relativePath":"docs/frontend/javascript/createjs-note.md","filePath":"docs/frontend/javascript/createjs-note.md"}'),p={name:"docs/frontend/javascript/createjs-note.md"},e=l(`<h1 id="createjs-笔记" tabindex="-1">CreateJS 笔记 <a class="header-anchor" href="#createjs-笔记" aria-label="Permalink to &quot;CreateJS 笔记&quot;">​</a></h1><blockquote><p>A suite of Javascript libraries &amp; tools for building rich, interactive experiences with HTML5.</p></blockquote><h2 id="easeljs" tabindex="-1">EaselJS <a class="header-anchor" href="#easeljs" aria-label="Permalink to &quot;EaselJS&quot;">​</a></h2><p><a href="http://www.createjs.cc/src/docs/easeljs/classes/EaselJS.html" target="_blank" rel="noreferrer">http://www.createjs.cc/src/docs/easeljs/classes/EaselJS.html</a></p><h3 id="绘制矢量图形" tabindex="-1">绘制矢量图形 <a class="header-anchor" href="#绘制矢量图形" aria-label="Permalink to &quot;绘制矢量图形&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> graphics </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> createjs.</span><span style="color:#B392F0;">Graphics</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">beginFill</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;#ff0000&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">drawRect</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> shape </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> createjs.</span><span style="color:#B392F0;">Shape</span><span style="color:#E1E4E8;">(graphics);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 交替使用也可以使用 Shape 类的图形属性渲染上面一样。</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> shape </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> createjs.</span><span style="color:#B392F0;">Shape</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">shape.graphics.</span><span style="color:#B392F0;">beginFill</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;#ff0000&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">drawRect</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> graphics </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> createjs.</span><span style="color:#6F42C1;">Graphics</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">beginFill</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;#ff0000&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">drawRect</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> shape </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> createjs.</span><span style="color:#6F42C1;">Shape</span><span style="color:#24292E;">(graphics);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 交替使用也可以使用 Shape 类的图形属性渲染上面一样。</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> shape </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> createjs.</span><span style="color:#6F42C1;">Shape</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">shape.graphics.</span><span style="color:#6F42C1;">beginFill</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;#ff0000&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">drawRect</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="蒙版" tabindex="-1">蒙版 <a class="header-anchor" href="#蒙版" aria-label="Permalink to &quot;蒙版&quot;">​</a></h3><p><code>xxx.mask = shape</code> 可以以 shape 的区域建立蒙版</p><h3 id="层级" tabindex="-1">层级 <a class="header-anchor" href="#层级" aria-label="Permalink to &quot;层级&quot;">​</a></h3><p>EaselJS 中没有类似 CSS 中的 <code>z-index</code> 概念，可以通过 <code>Container</code> 的方法设置 <code>child</code> 的 <code>index</code>。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">getChildIndex</span><span style="color:#E1E4E8;">(child);</span></span>
<span class="line"><span style="color:#B392F0;">setChildIndex</span><span style="color:#E1E4E8;">(child, index);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">getChildIndex</span><span style="color:#24292E;">(child);</span></span>
<span class="line"><span style="color:#6F42C1;">setChildIndex</span><span style="color:#24292E;">(child, index);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="获取图形边界" tabindex="-1">获取图形边界 <a class="header-anchor" href="#获取图形边界" aria-label="Permalink to &quot;获取图形边界&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> xxx.</span><span style="color:#B392F0;">getBounds</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> xxx.</span><span style="color:#6F42C1;">getBounds</span><span style="color:#24292E;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>可以获得 <code>b.x</code>, <code>b.y</code>, <code>b.width</code>, <code>b.height</code></p><h2 id="预加载-preload" tabindex="-1">预加载（preload） <a class="header-anchor" href="#预加载-preload" aria-label="Permalink to &quot;预加载（preload）&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> queue </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> createjs.</span><span style="color:#B392F0;">LoadQueue</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">queue.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;complete&quot;</span><span style="color:#E1E4E8;">, handleComplete, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">queue.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;progress&quot;</span><span style="color:#E1E4E8;">, handleProgress, </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">queue.</span><span style="color:#B392F0;">installPlugin</span><span style="color:#E1E4E8;">(createjs.Sound);</span></span>
<span class="line"><span style="color:#E1E4E8;">queue.</span><span style="color:#B392F0;">loadManifest</span><span style="color:#E1E4E8;">(resList);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> queue </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> createjs.</span><span style="color:#6F42C1;">LoadQueue</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">queue.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;complete&quot;</span><span style="color:#24292E;">, handleComplete, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">queue.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;progress&quot;</span><span style="color:#24292E;">, handleProgress, </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">queue.</span><span style="color:#6F42C1;">installPlugin</span><span style="color:#24292E;">(createjs.Sound);</span></span>
<span class="line"><span style="color:#24292E;">queue.</span><span style="color:#6F42C1;">loadManifest</span><span style="color:#24292E;">(resList);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="声音-sound" tabindex="-1">声音（sound） <a class="header-anchor" href="#声音-sound" aria-label="Permalink to &quot;声音（sound）&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 这里 audio 是 preload 中自定义的名字</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> bgm </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> createjs.Sound.</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;audio&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">bgm.</span><span style="color:#B392F0;">on</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">&quot;complete&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () {</span></span>
<span class="line"><span style="color:#E1E4E8;">    bgm.</span><span style="color:#B392F0;">play</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 这里 audio 是 preload 中自定义的名字</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> bgm </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> createjs.Sound.</span><span style="color:#6F42C1;">play</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;audio&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">bgm.</span><span style="color:#6F42C1;">on</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">&quot;complete&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () {</span></span>
<span class="line"><span style="color:#24292E;">    bgm.</span><span style="color:#6F42C1;">play</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,18),o=[e];function r(c,t,i,E,y,d){return a(),n("div",null,o)}const b=s(p,[["render",r]]);export{h as __pageData,b as default};
