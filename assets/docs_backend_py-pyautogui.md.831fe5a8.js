import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.5c044c0e.js";const F=JSON.parse('{"title":"使用 Python 构建UI自动化脚本","description":"","frontmatter":{"title":"使用 Python 构建UI自动化脚本","date":"2023-07-23T12:00:00.000Z","tags":["Python"]},"headers":[],"relativePath":"docs/backend/py-pyautogui.md","filePath":"docs/backend/py-pyautogui.md"}'),p={name:"docs/backend/py-pyautogui.md"},o=l(`<h1 id="使用-python-构建ui自动化脚本" tabindex="-1">使用 Python 构建UI自动化脚本 <a class="header-anchor" href="#使用-python-构建ui自动化脚本" aria-label="Permalink to &quot;使用 Python 构建UI自动化脚本&quot;">​</a></h1><h2 id="颜色处理篇" tabindex="-1">颜色处理篇 <a class="header-anchor" href="#颜色处理篇" aria-label="Permalink to &quot;颜色处理篇&quot;">​</a></h2><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> pyautogui</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">compare_color</span><span style="color:#E1E4E8;">(color1: tuple[</span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">], color2: tuple[</span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">], sim: </span><span style="color:#79B8FF;">float</span><span style="color:#E1E4E8;">) -&gt; </span><span style="color:#79B8FF;">bool</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">    对比两个BGR颜色</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    ar </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> color1[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    ag </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> color1[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    ab </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> color1[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    br </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> color2[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    bg </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> color2[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    bb </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> color2[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    fz </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> sim </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10000</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ((ar </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> br) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> (ar </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> br) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (ag </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> bg) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> (ag </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> bg) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> (ab </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> bb) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> (ab </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> bb)) </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> fz</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cv_color</span><span style="color:#E1E4E8;">(color: </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">) -&gt; tuple[</span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">]:</span></span>
<span class="line"><span style="color:#E1E4E8;">    b </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(color[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">], </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    g </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(color[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">], </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    r </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">(color[</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">:</span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">], </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> b, g, r</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get_color</span><span style="color:#E1E4E8;">(x: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, y: </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, screen</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">, ) -&gt; tuple[</span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">]:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">    返回CV图像指定坐标的颜色（BGR）</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> screen </span><span style="color:#F97583;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        rgb </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pyautogui.pixel(x, y)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> rgb[</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">], rgb[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">], rgb[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> screen[y, x]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">is_color</span><span style="color:#E1E4E8;">(pos: tuple[</span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">int</span><span style="color:#E1E4E8;">], color: </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">, sim: </span><span style="color:#79B8FF;">float</span><span style="color:#E1E4E8;">, screen</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">, ) -&gt; </span><span style="color:#79B8FF;">bool</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">    颜色判定</span></span>
<span class="line"><span style="color:#9ECBFF;">    :param screen:截图</span></span>
<span class="line"><span style="color:#9ECBFF;">    :param pos:坐标(x,y)</span></span>
<span class="line"><span style="color:#9ECBFF;">    :param color:颜色</span></span>
<span class="line"><span style="color:#9ECBFF;">    :param sim:相似度</span></span>
<span class="line"><span style="color:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    screen_color </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> get_color(pos[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">], pos[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">], screen)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> compare_color(cv_color(color), screen_color, sim)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pyautogui</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">compare_color</span><span style="color:#24292E;">(color1: tuple[</span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">], color2: tuple[</span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">], sim: </span><span style="color:#005CC5;">float</span><span style="color:#24292E;">) -&gt; </span><span style="color:#005CC5;">bool</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">    对比两个BGR颜色</span></span>
<span class="line"><span style="color:#032F62;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    ar </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> color1[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    ag </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> color1[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    ab </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> color1[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    br </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> color2[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    bg </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> color2[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    bb </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> color2[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    fz </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> sim </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ((ar </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> br) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> (ar </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> br) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (ag </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> bg) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> (ag </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> bg) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> (ab </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> bb) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> (ab </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> bb)) </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> fz</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cv_color</span><span style="color:#24292E;">(color: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">) -&gt; tuple[</span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">]:</span></span>
<span class="line"><span style="color:#24292E;">    b </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(color[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">16</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    g </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(color[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">16</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    r </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(color[</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">6</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">16</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> b, g, r</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_color</span><span style="color:#24292E;">(x: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, y: </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, screen</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, ) -&gt; tuple[</span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">]:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">    返回CV图像指定坐标的颜色（BGR）</span></span>
<span class="line"><span style="color:#032F62;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> screen </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        rgb </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pyautogui.pixel(x, y)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> rgb[</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], rgb[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], rgb[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> screen[y, x]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">is_color</span><span style="color:#24292E;">(pos: tuple[</span><span style="color:#005CC5;">int</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">], color: </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">, sim: </span><span style="color:#005CC5;">float</span><span style="color:#24292E;">, screen</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, ) -&gt; </span><span style="color:#005CC5;">bool</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#032F62;">    颜色判定</span></span>
<span class="line"><span style="color:#032F62;">    :param screen:截图</span></span>
<span class="line"><span style="color:#032F62;">    :param pos:坐标(x,y)</span></span>
<span class="line"><span style="color:#032F62;">    :param color:颜色</span></span>
<span class="line"><span style="color:#032F62;">    :param sim:相似度</span></span>
<span class="line"><span style="color:#032F62;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    screen_color </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> get_color(pos[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], pos[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], screen)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> compare_color(cv_color(color), screen_color, sim)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h2 id="图像匹配篇-opencv" tabindex="-1">图像匹配篇(opencv) <a class="header-anchor" href="#图像匹配篇-opencv" aria-label="Permalink to &quot;图像匹配篇(opencv)&quot;">​</a></h2><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> cv2</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> numpy</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> pyautogui</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">image_search</span><span style="color:#E1E4E8;">(template, mask </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    target </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pyautogui.screenshot()</span></span>
<span class="line"><span style="color:#E1E4E8;">    target </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> numpy.array(target)</span></span>
<span class="line"><span style="color:#E1E4E8;">    target </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cv2.cvtColor(target, cv2.</span><span style="color:#79B8FF;">COLOR_RGB2BGR</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 获得模板图片的高宽尺寸</span></span>
<span class="line"><span style="color:#E1E4E8;">    t_height, t_width </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> template.shape[:</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 执行模板匹配，采用的匹配方式cv2.TM_SQDIFF_NORMED</span></span>
<span class="line"><span style="color:#E1E4E8;">    result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cv2.matchTemplate(target, template, cv2.</span><span style="color:#79B8FF;">TM_SQDIFF_NORMED</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">mask</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">mask)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 归一化处理</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># cv2.normalize(result, result, 0, 1, cv2.NORM_MINMAX, -1)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 寻找矩阵（一维数组当做向量，用Mat定义）中的最大值和最小值的匹配结果及其位置</span></span>
<span class="line"><span style="color:#E1E4E8;">    min_val, max_val, min_loc, max_loc </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cv2.minMaxLoc(result)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 匹配值转换为字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 对于cv2.TM_SQDIFF及cv2.TM_SQDIFF_NORMED方法min_val越趋近与0匹配度越好，匹配位置取min_loc</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 对于其他方法max_val越趋近于1匹配度越好，匹配位置取max_loc</span></span>
<span class="line"><span style="color:#E1E4E8;">    str_min_val </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;">(min_val)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 绘制矩形边框，将匹配区域标注出来</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># min_loc：矩形定点</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># (min_loc[0]+t_width,min_loc[1]+t_height)：矩形的宽高</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># (0,0,225)：矩形的边框颜色；2：矩形边框宽度</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># cv2.rectangle(target, min_loc, (min_loc[0] + t_width, min_loc[1] + t_height), (0, 0, 225), 2)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># cv2.imshow(&quot;MatchResult----MatchingValue=&quot; + str_min_val, target)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># cv2.waitKey()</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> min_loc, min_val</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> cv2</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> numpy</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> pyautogui</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">image_search</span><span style="color:#24292E;">(template, mask </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    target </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> pyautogui.screenshot()</span></span>
<span class="line"><span style="color:#24292E;">    target </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> numpy.array(target)</span></span>
<span class="line"><span style="color:#24292E;">    target </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cv2.cvtColor(target, cv2.</span><span style="color:#005CC5;">COLOR_RGB2BGR</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 获得模板图片的高宽尺寸</span></span>
<span class="line"><span style="color:#24292E;">    t_height, t_width </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> template.shape[:</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 执行模板匹配，采用的匹配方式cv2.TM_SQDIFF_NORMED</span></span>
<span class="line"><span style="color:#24292E;">    result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cv2.matchTemplate(target, template, cv2.</span><span style="color:#005CC5;">TM_SQDIFF_NORMED</span><span style="color:#24292E;">, </span><span style="color:#E36209;">mask</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">mask)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 归一化处理</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># cv2.normalize(result, result, 0, 1, cv2.NORM_MINMAX, -1)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 寻找矩阵（一维数组当做向量，用Mat定义）中的最大值和最小值的匹配结果及其位置</span></span>
<span class="line"><span style="color:#24292E;">    min_val, max_val, min_loc, max_loc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cv2.minMaxLoc(result)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 匹配值转换为字符串</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 对于cv2.TM_SQDIFF及cv2.TM_SQDIFF_NORMED方法min_val越趋近与0匹配度越好，匹配位置取min_loc</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 对于其他方法max_val越趋近于1匹配度越好，匹配位置取max_loc</span></span>
<span class="line"><span style="color:#24292E;">    str_min_val </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;">(min_val)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 绘制矩形边框，将匹配区域标注出来</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># min_loc：矩形定点</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># (min_loc[0]+t_width,min_loc[1]+t_height)：矩形的宽高</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># (0,0,225)：矩形的边框颜色；2：矩形边框宽度</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># cv2.rectangle(target, min_loc, (min_loc[0] + t_width, min_loc[1] + t_height), (0, 0, 225), 2)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># cv2.imshow(&quot;MatchResult----MatchingValue=&quot; + str_min_val, target)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># cv2.waitKey()</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> min_loc, min_val</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h2 id="按键监听篇" tabindex="-1">按键监听篇 <a class="header-anchor" href="#按键监听篇" aria-label="Permalink to &quot;按键监听篇&quot;">​</a></h2><h3 id="鼠标" tabindex="-1">鼠标 <a class="header-anchor" href="#鼠标" aria-label="Permalink to &quot;鼠标&quot;">​</a></h3><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> pynput </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> mouse</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 鼠标click监听</span></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on_click</span><span style="color:#E1E4E8;">(x, y, button, pressed):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># print(f&#39;Click position： ({x}, {y})&#39;)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> pressed:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&#39;Click button： </span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">button</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># print(f&#39;Click state: {&quot;Pressed&quot; if pressed else &quot;Release&quot;}&#39;)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> mouse.Listener(</span><span style="color:#FFAB70;">on_click</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">on_click) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> listener:</span></span>
<span class="line"><span style="color:#E1E4E8;">    listener.join()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> pynput </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> mouse</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 鼠标click监听</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on_click</span><span style="color:#24292E;">(x, y, button, pressed):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># print(f&#39;Click position： ({x}, {y})&#39;)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> pressed:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&#39;Click button： </span><span style="color:#005CC5;">{</span><span style="color:#24292E;">button</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># print(f&#39;Click state: {&quot;Pressed&quot; if pressed else &quot;Release&quot;}&#39;)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> mouse.Listener(</span><span style="color:#E36209;">on_click</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">on_click) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> listener:</span></span>
<span class="line"><span style="color:#24292E;">    listener.join()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="键盘" tabindex="-1">键盘 <a class="header-anchor" href="#键盘" aria-label="Permalink to &quot;键盘&quot;">​</a></h3><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">on_press</span><span style="color:#E1E4E8;">(key):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">hasattr</span><span style="color:#E1E4E8;">(key, </span><span style="color:#9ECBFF;">&#39;char&#39;</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pass</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">elif</span><span style="color:#E1E4E8;"> key </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> k.Key.esc:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">with</span><span style="color:#E1E4E8;"> k.Listener(</span><span style="color:#FFAB70;">on_press</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">on_press) </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> listener:</span></span>
<span class="line"><span style="color:#E1E4E8;">    listener.join()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">on_press</span><span style="color:#24292E;">(key):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">hasattr</span><span style="color:#24292E;">(key, </span><span style="color:#032F62;">&#39;char&#39;</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pass</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">elif</span><span style="color:#24292E;"> key </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> k.Key.esc:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">with</span><span style="color:#24292E;"> k.Listener(</span><span style="color:#E36209;">on_press</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">on_press) </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> listener:</span></span>
<span class="line"><span style="color:#24292E;">    listener.join()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="记一种线程强制中断方式" tabindex="-1">记一种线程强制中断方式 <a class="header-anchor" href="#记一种线程强制中断方式" aria-label="Permalink to &quot;记一种线程强制中断方式&quot;">​</a></h2><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">_async_raise</span><span style="color:#E1E4E8;">(tid, exctype):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;raises the exception, performs cleanup if needed&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    tid </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ctypes.c_long(tid)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> inspect.isclass(exctype):</span></span>
<span class="line"><span style="color:#E1E4E8;">        exctype </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;">(exctype)</span></span>
<span class="line"><span style="color:#E1E4E8;">    res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ctypes.pythonapi.PyThreadState_SetAsyncExc(tid, ctypes.py_object(exctype))</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> res </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">raise</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">ValueError</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;invalid thread id&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">elif</span><span style="color:#E1E4E8;"> res </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># &quot;&quot;&quot;if it returns a number greater than one, you&#39;re in trouble,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># and you should call it again with exc=NULL to revert the effect&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        ctypes.pythonapi.PyThreadState_SetAsyncExc(tid, </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">raise</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SystemError</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;PyThreadState_SetAsyncExc failed&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">stop_thread</span><span style="color:#E1E4E8;">(thread):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">try</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        _async_raise(thread.ident, </span><span style="color:#79B8FF;">SystemExit</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">except</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">SystemError</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">pass</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">_async_raise</span><span style="color:#24292E;">(tid, exctype):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;raises the exception, performs cleanup if needed&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    tid </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ctypes.c_long(tid)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> inspect.isclass(exctype):</span></span>
<span class="line"><span style="color:#24292E;">        exctype </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">type</span><span style="color:#24292E;">(exctype)</span></span>
<span class="line"><span style="color:#24292E;">    res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ctypes.pythonapi.PyThreadState_SetAsyncExc(tid, ctypes.py_object(exctype))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">ValueError</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;invalid thread id&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">elif</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># &quot;&quot;&quot;if it returns a number greater than one, you&#39;re in trouble,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># and you should call it again with exc=NULL to revert the effect&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        ctypes.pythonapi.PyThreadState_SetAsyncExc(tid, </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SystemError</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;PyThreadState_SetAsyncExc failed&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">stop_thread</span><span style="color:#24292E;">(thread):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">try</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        _async_raise(thread.ident, </span><span style="color:#005CC5;">SystemExit</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">except</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">SystemError</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">pass</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="关于-pyautogui-按键延迟的问题" tabindex="-1">关于 pyautogui 按键延迟的问题 <a class="header-anchor" href="#关于-pyautogui-按键延迟的问题" aria-label="Permalink to &quot;关于 pyautogui 按键延迟的问题&quot;">​</a></h2><p>可通过 <code>PAUSE</code> 调整按键之间的延迟。</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">pyautogui.</span><span style="color:#79B8FF;">PAUSE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">pyautogui.</span><span style="color:#005CC5;">PAUSE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,15),e=[o];function c(r,t,y,E,i,u){return n(),a("div",null,e)}const m=s(p,[["render",c]]);export{F as __pageData,m as default};
