import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.5c044c0e.js";const F=JSON.parse('{"title":"记一个 Table 跨行转换算法","description":"","frontmatter":{"title":"记一个 Table 跨行转换算法","catalog":true,"date":"2020-04-17T16:50:24.000Z","subtitle":null,"header-img":null,"tags":["JavaScript"]},"headers":[],"relativePath":"docs/frontend/javascript/table-colspan-convert.md","filePath":"docs/frontend/javascript/table-colspan-convert.md"}'),p={name:"docs/frontend/javascript/table-colspan-convert.md"},o=l(`<h1 id="记一个-table-跨行转换算法" tabindex="-1">记一个 Table 跨行转换算法 <a class="header-anchor" href="#记一个-table-跨行转换算法" aria-label="Permalink to &quot;记一个 Table 跨行转换算法&quot;">​</a></h1><h2 id="源数据格式" tabindex="-1">源数据格式 <a class="header-anchor" href="#源数据格式" aria-label="Permalink to &quot;源数据格式&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  [{ value: </span><span style="color:#9ECBFF;">&quot;一级&quot;</span><span style="color:#E1E4E8;"> }, { value: </span><span style="color:#9ECBFF;">&quot;二级1&quot;</span><span style="color:#E1E4E8;"> }, { value: </span><span style="color:#9ECBFF;">&quot;三级1&quot;</span><span style="color:#E1E4E8;"> }],</span></span>
<span class="line"><span style="color:#E1E4E8;">  [{ value: </span><span style="color:#9ECBFF;">&quot;一级&quot;</span><span style="color:#E1E4E8;"> }, { value: </span><span style="color:#9ECBFF;">&quot;二级1&quot;</span><span style="color:#E1E4E8;"> }, { value: </span><span style="color:#9ECBFF;">&quot;三级2&quot;</span><span style="color:#E1E4E8;"> }],</span></span>
<span class="line"><span style="color:#E1E4E8;">  [{ value: </span><span style="color:#9ECBFF;">&quot;一级&quot;</span><span style="color:#E1E4E8;"> }, { value: </span><span style="color:#9ECBFF;">&quot;二级2&quot;</span><span style="color:#E1E4E8;"> }, { value: </span><span style="color:#9ECBFF;">&quot;三级3&quot;</span><span style="color:#E1E4E8;"> }],</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  [{ value: </span><span style="color:#032F62;">&quot;一级&quot;</span><span style="color:#24292E;"> }, { value: </span><span style="color:#032F62;">&quot;二级1&quot;</span><span style="color:#24292E;"> }, { value: </span><span style="color:#032F62;">&quot;三级1&quot;</span><span style="color:#24292E;"> }],</span></span>
<span class="line"><span style="color:#24292E;">  [{ value: </span><span style="color:#032F62;">&quot;一级&quot;</span><span style="color:#24292E;"> }, { value: </span><span style="color:#032F62;">&quot;二级1&quot;</span><span style="color:#24292E;"> }, { value: </span><span style="color:#032F62;">&quot;三级2&quot;</span><span style="color:#24292E;"> }],</span></span>
<span class="line"><span style="color:#24292E;">  [{ value: </span><span style="color:#032F62;">&quot;一级&quot;</span><span style="color:#24292E;"> }, { value: </span><span style="color:#032F62;">&quot;二级2&quot;</span><span style="color:#24292E;"> }, { value: </span><span style="color:#032F62;">&quot;三级3&quot;</span><span style="color:#24292E;"> }],</span></span>
<span class="line"><span style="color:#24292E;">];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="html-模板" tabindex="-1">HTML 模板 <a class="header-anchor" href="#html-模板" aria-label="Permalink to &quot;HTML 模板&quot;">​</a></h2><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">table</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">tr</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-for</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;(row, rowIndex) in computedData&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">:key</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;rowIndex&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">v-for</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;(col, colIndex) in row&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">:rowspan</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;col.rowspan&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">:key</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;colIndex&quot;</span><span style="color:#E1E4E8;">&gt;{{ col.value }}&lt;/</span><span style="color:#85E89D;">td</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">tr</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">table</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">table</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">tr</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-for</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;(row, rowIndex) in computedData&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:key</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;rowIndex&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">td</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">v-for</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;(col, colIndex) in row&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:rowspan</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;col.rowspan&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">:key</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;colIndex&quot;</span><span style="color:#24292E;">&gt;{{ col.value }}&lt;/</span><span style="color:#22863A;">td</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;/</span><span style="color:#22863A;">tr</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">table</span><span style="color:#24292E;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="目标格式" tabindex="-1">目标格式 <a class="header-anchor" href="#目标格式" aria-label="Permalink to &quot;目标格式&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// computedData</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span></span>
<span class="line"><span style="color:#E1E4E8;">    { rowspan: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">, value: </span><span style="color:#9ECBFF;">&quot;一级&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { rowspan: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">, value: </span><span style="color:#9ECBFF;">&quot;二级1&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { rowspan: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, value: </span><span style="color:#9ECBFF;">&quot;三级1&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">  [{ rowspan: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, value: </span><span style="color:#9ECBFF;">&quot;三级2&quot;</span><span style="color:#E1E4E8;"> }],</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span></span>
<span class="line"><span style="color:#E1E4E8;">    { rowspan: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, value: </span><span style="color:#9ECBFF;">&quot;二级2&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">    { rowspan: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, value: </span><span style="color:#9ECBFF;">&quot;三级3&quot;</span><span style="color:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#E1E4E8;">  ],</span></span>
<span class="line"><span style="color:#E1E4E8;">];</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// computedData</span></span>
<span class="line"><span style="color:#24292E;">[</span></span>
<span class="line"><span style="color:#24292E;">  [</span></span>
<span class="line"><span style="color:#24292E;">    { rowspan: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">, value: </span><span style="color:#032F62;">&quot;一级&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { rowspan: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">, value: </span><span style="color:#032F62;">&quot;二级1&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { rowspan: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, value: </span><span style="color:#032F62;">&quot;三级1&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">  [{ rowspan: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, value: </span><span style="color:#032F62;">&quot;三级2&quot;</span><span style="color:#24292E;"> }],</span></span>
<span class="line"><span style="color:#24292E;">  [</span></span>
<span class="line"><span style="color:#24292E;">    { rowspan: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, value: </span><span style="color:#032F62;">&quot;二级2&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">    { rowspan: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, value: </span><span style="color:#032F62;">&quot;三级3&quot;</span><span style="color:#24292E;"> },</span></span>
<span class="line"><span style="color:#24292E;">  ],</span></span>
<span class="line"><span style="color:#24292E;">];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="难点解析" tabindex="-1">难点解析 <a class="header-anchor" href="#难点解析" aria-label="Permalink to &quot;难点解析&quot;">​</a></h2><p>由于 table 跨行，会导致下一行的 td 不需要遍历，比如第一行的列跨到了第二行，那么第二行的列就不需要遍历。</p><p>所以 computedData 的 length 为 3、1、2</p><p>暂时没有特别好的办法，我所用的方式是生成 result 的时候，查找 result 中是否出现过相同值的单元格，如果出现，就 <code>rowspan++</code>，如果没有出现，则 push 进数组。</p><h2 id="转换算法" tabindex="-1">转换算法 <a class="header-anchor" href="#转换算法" aria-label="Permalink to &quot;转换算法&quot;">​</a></h2><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getRowSpan</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">inputData</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">rowIndex</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">colIndex</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">valueKeyName</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> n </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#E1E4E8;">    inputData[rowIndex </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> n] </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">    inputData[rowIndex </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> n][colIndex][valueKeyName] </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> inputData[rowIndex][colIndex][valueKeyName]</span></span>
<span class="line"><span style="color:#E1E4E8;">  ) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    n</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> n;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isNeedShow</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">inputData</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">rowIndex</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">colIndex</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">valueKeyName</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">prev</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> inputData[rowIndex </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">current</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> inputData[rowIndex];</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (prev </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> current </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> prev[colIndex][valueKeyName] </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> current[colIndex][valueKeyName]) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">transformRowSpan</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">inputData</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">valueKeyName</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">  inputData.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">row</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">rowIndex</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">computedRow</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [];</span></span>
<span class="line"><span style="color:#E1E4E8;">    row.</span><span style="color:#B392F0;">forEach</span><span style="color:#E1E4E8;">((</span><span style="color:#FFAB70;">col</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">colIndex</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isNeedShow</span><span style="color:#E1E4E8;">(inputData, rowIndex, colIndex, valueKeyName)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">computedCol</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> { </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">col };</span></span>
<span class="line"><span style="color:#E1E4E8;">        computedCol.rowspan </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getRowSpan</span><span style="color:#E1E4E8;">(inputData, rowIndex, colIndex, valueKeyName) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        computedRow.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(computedCol);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">    result.</span><span style="color:#B392F0;">push</span><span style="color:#E1E4E8;">(computedRow);</span></span>
<span class="line"><span style="color:#E1E4E8;">  });</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getRowSpan</span><span style="color:#24292E;">(</span><span style="color:#E36209;">inputData</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rowIndex</span><span style="color:#24292E;">, </span><span style="color:#E36209;">colIndex</span><span style="color:#24292E;">, </span><span style="color:#E36209;">valueKeyName</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (</span></span>
<span class="line"><span style="color:#24292E;">    inputData[rowIndex </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> n] </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">    inputData[rowIndex </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> n][colIndex][valueKeyName] </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> inputData[rowIndex][colIndex][valueKeyName]</span></span>
<span class="line"><span style="color:#24292E;">  ) {</span></span>
<span class="line"><span style="color:#24292E;">    n</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> n;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isNeedShow</span><span style="color:#24292E;">(</span><span style="color:#E36209;">inputData</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rowIndex</span><span style="color:#24292E;">, </span><span style="color:#E36209;">colIndex</span><span style="color:#24292E;">, </span><span style="color:#E36209;">valueKeyName</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">prev</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> inputData[rowIndex </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">current</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> inputData[rowIndex];</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (prev </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> current </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> prev[colIndex][valueKeyName] </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> current[colIndex][valueKeyName]) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">transformRowSpan</span><span style="color:#24292E;">(</span><span style="color:#E36209;">inputData</span><span style="color:#24292E;">, </span><span style="color:#E36209;">valueKeyName</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">  inputData.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">row</span><span style="color:#24292E;">, </span><span style="color:#E36209;">rowIndex</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">computedRow</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [];</span></span>
<span class="line"><span style="color:#24292E;">    row.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((</span><span style="color:#E36209;">col</span><span style="color:#24292E;">, </span><span style="color:#E36209;">colIndex</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isNeedShow</span><span style="color:#24292E;">(inputData, rowIndex, colIndex, valueKeyName)) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">computedCol</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> { </span><span style="color:#D73A49;">...</span><span style="color:#24292E;">col };</span></span>
<span class="line"><span style="color:#24292E;">        computedCol.rowspan </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getRowSpan</span><span style="color:#24292E;">(inputData, rowIndex, colIndex, valueKeyName) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        computedRow.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(computedCol);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">    result.</span><span style="color:#6F42C1;">push</span><span style="color:#24292E;">(computedRow);</span></span>
<span class="line"><span style="color:#24292E;">  });</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h2 id="最终效果" tabindex="-1">最终效果 <a class="header-anchor" href="#最终效果" aria-label="Permalink to &quot;最终效果&quot;">​</a></h2><p><img src="https://imgs-1251264059.cos.ap-chengdu.myqcloud.com/table-colspan-convert/d016992d-9a5b-4ad8-a93c-d8cf31664e1b.png" alt="UTOOLS1587100295064.png"></p>`,15),e=[o];function t(c,r,E,y,i,u){return n(),a("div",null,e)}const b=s(p,[["render",t]]);export{F as __pageData,b as default};
