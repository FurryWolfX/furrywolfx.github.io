import{_ as h,c as n,l as s,a as i,a4 as a,o as l}from"./chunks/framework.VzvPGsLx.js";const x=JSON.parse('{"title":"0015. 三数之和","description":"","frontmatter":{"title":"0015. 三数之和","date":"2024-05-02T00:00:00.000Z","tags":["LeetCode"]},"headers":[],"relativePath":"docs/leetcode/0015.3sum.md","filePath":"docs/leetcode/0015.3sum.md"}'),t={name:"docs/leetcode/0015.3sum.md"},p=a("",13),e=s("code",null,"给定一个数组，找出其中两个相加等于给定值",-1),k=s("a",{href:"./0001.two-sum.html"},"1. 两数之和",-1),r={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},E={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.606ex",height:"2.452ex",role:"img",focusable:"false",viewBox:"0 -833.9 2919.8 1083.9","aria-hidden":"true"},d=a("",1),g=[d],y=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"N"),s("mn",null,"2")]),s("mo",{stretchy:"false"},")")])],-1),c=a("",8),o={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},m={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.606ex",height:"2.452ex",role:"img",focusable:"false",viewBox:"0 -833.9 2919.8 1083.9","aria-hidden":"true"},u=a("",1),b=[u],F=s("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"N"),s("mn",null,"2")]),s("mo",{stretchy:"false"},")")])],-1),A=s("li",null,"空间复杂度：取决于排序算法的空间消耗",-1);function T(Q,D,_,C,f,v){return l(),n("div",null,[p,s("p",null,[i("通过上面的思路，我们的问题转化为了"),e,i("，我们成功将问题转换为了另外一道力扣的简单题目"),k,i("。这个问题是比较简单的， 我们只需要对数组进行排序，然后双指针解决即可。 加上需要外层遍历依次数组，因此总的时间复杂度应该是 "),s("mjx-container",r,[(l(),n("svg",E,g)),y]),i("。")]),c,s("ul",null,[s("li",null,[i("时间复杂度："),s("mjx-container",o,[(l(),n("svg",m,b)),F])]),A])])}const B=h(t,[["render",T]]);export{x as __pageData,B as default};
