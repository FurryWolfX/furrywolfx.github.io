(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{456:function(a,s,t){"use strict";t.r(s);var e=t(5),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("blockquote",[t("p",[a._v("迄今，我已经使用 Git 很长一段时间了，考虑分享一些不管你是团队开发还是个人项目，都受用的高级 git 命令。")])]),a._v(" "),t("h1",{attrs:{id:"输出最后一次提交的改变"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输出最后一次提交的改变"}},[a._v("#")]),a._v(" 输出最后一次提交的改变")]),a._v(" "),t("p",[a._v("这个命令，我经常使用它 来发送其他没有使用 git 的人来检查或者集成所修改的。它会输出最近提交的修改内容到一个 zip 文件中。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" archive -o "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/updated.zip HEAD "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" --name-only HEAD^"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h1",{attrs:{id:"输出两个提交间的改变"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输出两个提交间的改变"}},[a._v("#")]),a._v(" 输出两个提交间的改变")]),a._v(" "),t("p",[a._v("类似的，如果你需要输出某两个提交间的改变时，你可以使用这个。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" archive -o "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("/latest.zip NEW_COMMIT_ID_HERE "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" --name-only OLD_COMMIT_ID_HERE NEW_COMMIT_ID_HERE"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h1",{attrs:{id:"克隆-指定的远程分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#克隆-指定的远程分支"}},[a._v("#")]),a._v(" 克隆 指定的远程分支")]),a._v(" "),t("p",[a._v("如果你渴望只克隆远程仓库的一个指定分支，而不是整个仓库分支，这对你帮助很大。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" init\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" remote "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" -t BRANCH_NAME_HERE -f origin REMOTE_REPO_URL_PATH_HERE\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout BRANCH_NAME_HERE\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h1",{attrs:{id:"应用-从不相关的本地仓库来的补丁"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#应用-从不相关的本地仓库来的补丁"}},[a._v("#")]),a._v(" 应用 从不相关的本地仓库来的补丁")]),a._v(" "),t("p",[a._v("如果你需要其它一些不相关的本地仓库作为你现在仓库的补丁，这里就是通往那里的捷径。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" --git-dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("PATH_TO_OTHER_REPOSITORY_HERE/.git format-patch -k -1 --stdout COMMIT_HASH_ID_HERE"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" am -3 -k\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h1",{attrs:{id:"检测-你的分支的改变是否为其它分支的一部分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检测-你的分支的改变是否为其它分支的一部分"}},[a._v("#")]),a._v(" 检测 你的分支的改变是否为其它分支的一部分")]),a._v(" "),t("p",[a._v("cherry 命令让我们检测你的分支的改变是否出现在其它一些分支中。它通过 + 或者 - 符号来显示从当前分支与所给的分支之间的改变：是否合并了 (merged)。.+ 指示没有出现在所给分支中，反之，- 就表示出现在了所给的分支中了。这里就是如何去检测：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" cherry -v OTHER_BRANCH_NAME_HERE\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#例如：检测 master 分支")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" cherry -v master\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h1",{attrs:{id:"开始一个无历史的新分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始一个无历史的新分支"}},[a._v("#")]),a._v(" 开始一个无历史的新分支")]),a._v(" "),t("p",[a._v("有时，你需要开始一个新分支，但是又不想把很长很长的历史记录带进来，例如，你想在公众区域（开源）放置你的代码，但是又不想别人知道它的历史记录。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout --orphan NEW_BRANCH_NAME_HERE\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h1",{attrs:{id:"无切换分支的从其它分支-checkout-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无切换分支的从其它分支-checkout-文件"}},[a._v("#")]),a._v(" 无切换分支的从其它分支 Checkout 文件")]),a._v(" "),t("p",[a._v("不想切换分支，但是又想从其它分支中获得你需要的文件：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" checkout BRANCH_NAME_HERE -- PATH_TO_FILE_IN_BRANCH_HERE\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h1",{attrs:{id:"忽略已追踪文件的变动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#忽略已追踪文件的变动"}},[a._v("#")]),a._v(" 忽略已追踪文件的变动")]),a._v(" "),t("p",[a._v("如果您正在一个团队中工作，而且大家都在同一条 branch 上面工作，那么您很有可能会经常用到 fetch 和 merge。但是有时候这样会重置您的环境配置文件，如此的话，您就得在每次 merge 后修改它。使用这一命令，您就能要求 git 忽视指定文件的变动。这样，下回你再 merge 的话，这个文件就不会被修改了。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" update-index --assume-unchanged PATH_TO_FILE_HERE\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h1",{attrs:{id:"检查提交的变动是否是-release-的一部分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检查提交的变动是否是-release-的一部分"}},[a._v("#")]),a._v(" 检查提交的变动是否是 release 的一部分")]),a._v(" "),t("p",[a._v("name-rev 命令能告诉您一个 commit 相对于最近一次 release 的位置。使用这条命令，您就可以检查您所做出的改动是否是 release 的一部分了。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" name-rev --name-only COMMIT_HASH_HERE\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h1",{attrs:{id:"使用-rebase-推送而非-merge"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-rebase-推送而非-merge"}},[a._v("#")]),a._v(" 使用 rebase 推送而非 merge")]),a._v(" "),t("p",[a._v("如果您正在团队中工作并且整个团队都在同一条 branch 上面工作，那么您就得经常地进行 fetch/merge 或者 pull。\nGit 中，分支的合并以所提交的 merge 来记录，以此表明一条 feature 分支何时与主分支合并。\n但是在多团队成员共同工作于一条 branch 的情形中，常规的 merge 会导致 log 中出现多条消息，从而产生混淆。因此，您可以在 pull 的时候使用 rebase，以此来减少无用的 merge 消息，从而保持历史记录的清晰。")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" pull --rebase\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("您也可以将某条 branch 配置为总是使用 rebase 推送：")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" config branch.BRANCH_NAME_HERE.rebase "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h1",{attrs:{id:"导出差量更新包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导出差量更新包"}},[a._v("#")]),a._v(" 导出差量更新包")]),a._v(" "),t("p",[a._v("通过"),t("code",[a._v("git diff")]),a._v("得到差异列表")]),a._v(" "),t("p",[a._v("通过"),t("code",[a._v("git archive")]),a._v("打包")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" archive -o yourZipName.zip HEAD "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("diff")]),a._v(" copyID1 copyID2 --name-only"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h1",{attrs:{id:"清理缓存-并更新-gitignore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#清理缓存-并更新-gitignore"}},[a._v("#")]),a._v(" 清理缓存，并更新 gitignore")]),a._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -r --cached "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" commit -m "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'update .gitignore'")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);