(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{342:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000012672374",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://segmentfault.com/a/1190000012672374"),a("OutboundLink")],1)])]),t._v(" "),a("h1",{attrs:{id:"参数到底如何传递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参数到底如何传递"}},[t._v("#")]),t._v(" 参数到底如何传递？")]),t._v(" "),a("p",[t._v("借用红宝书的一句话：")]),t._v(" "),a("blockquote",[a("p",[t._v("ECMAScript 中所有函数的参数都是按值传递的")])]),t._v(" "),a("p",[t._v("这个值如果是简单类型，那么就是其本身。如果是引用类型也就是对象传递的就是指向这个对象的地址。故我们可以认为参数传递全部都是值传递，那么具体怎么理解呢？看下例子：")]),t._v(" "),a("p",[t._v("第一个例子")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("p",[t._v("先不说为什么原因，我们就通过画图的方式来走一遍流程，我相信应该就能理解其中的参数传递了。切记传递引用类型传递的是指针！")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgs-1251264059.coscd.myqcloud.com/92523cc0-c5aa-2b5e-a0c3-05473af861fe.jpg",alt:""}})]),t._v(" "),a("p",[t._v("首先执行 "),a("code",[t._v("var obj = {n: 1};")]),t._v(" ，可以看作在栈的 001 地址中存入了一个指向 "),a("code",[t._v("{n:1}")]),t._v(" 的指针 "),a("code",[t._v("*p")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgs-1251264059.coscd.myqcloud.com/7ba7e1bd-e0e5-04c3-969b-6805d2b4cd10.jpg",alt:""}})]),t._v(" "),a("p",[t._v("接下来为声明 "),a("code",[t._v("function foo")]),t._v(" 此时会创建函数执行上下文，产生一个变量对象，其中声明了形参 data，由于函数没有执行，当前值为 "),a("code",[t._v("undefined")]),t._v("。我们记 data 地址为 022。\n关于更多变量对象的知识可以参考冴羽老师的这篇 "),a("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/issues/5",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 深入之变量对象"),a("OutboundLink")],1),t._v("，本文不深入研究关于 AO 相关，你只需要知道在声明这个函数的时候里面的形参已经被创建出来了。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgs-1251264059.coscd.myqcloud.com/846f6c56-d590-423c-a3fb-64f48001c32b.jpg",alt:""}})]),t._v(" "),a("p",[t._v("执行 "),a("code",[t._v("foo(obj)")]),t._v(" 其中会进行参数传递，其中将 obj 中存储的、*p 拷贝给处在 022 地址的 data，那么此时它们就指向了同一个对象，如果某一个变量更改了 n 的值，另一个变量中 n 的值也会更改，因为其中保存的是指针。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgs-1251264059.coscd.myqcloud.com/569923d9-24e8-f15e-eddd-b540dec3a151.jpg",alt:""}})]),t._v(" "),a("p",[t._v("进入函数内部，顺序执行 "),a("code",[t._v("data = 2;")]),t._v(" 此时 002 地址存储了基本类型值，则直接存储在栈中，从而与堆中的 "),a("code",[t._v("{n:1}")]),t._v(" 失去了联系。从而打印 "),a("code",[t._v("console.log(data) // 2")]),t._v("，最后发现初始开辟的 "),a("code",[t._v("{n:1}")]),t._v(" 对象没有过更改，故而 "),a("code",[t._v("console.log(obj.n) // 1")]),t._v(" 仍然打印 1。")]),t._v(" "),a("p",[t._v("第二个例子")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\n  obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("整体来看这个例子中出现了同名覆盖的问题。不太了解代码如何执行的流程，可能会因为同名的关系而有些混乱，不过没关系。只要按照上一个例子的流程图中的执行过程，一定可以得出正确的结果。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgs-1251264059.coscd.myqcloud.com/7cc99162-9322-debe-dc07-75fab77997b2.jpg",alt:""}})]),t._v(" "),a("p",[t._v("声明变量 obj，地址为 011 其中存入指向 "),a("code",[t._v("{n:1}")]),t._v(" 的指针 "),a("code",[t._v("*p")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgs-1251264059.coscd.myqcloud.com/577c80a9-6275-9f48-ad18-9d46582ad346.jpg",alt:""}})]),t._v(" "),a("p",[t._v("声明函数，虽然同为 obj 变量名，但是形参 obj 为 AO 中的属性，不会与全局造成覆盖，其拥有新的地址记作 022，在未执行前其值为 undefined。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgs-1251264059.coscd.myqcloud.com/bbfcbc5f-b872-54d5-a8b1-dd1ad5bb4d4d.jpg",alt:""}})]),t._v(" "),a("p",[t._v("函数立即执行，此时将全局 obj 赋值给形参 obj，我们忽略这个重复命名的问题，其实就是将 011 中的 指针、*p 拷贝了一份给了 022。同时执行第一个 console.log(obj.n) 结果即为 1。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgs-1251264059.coscd.myqcloud.com/8fdae669-d0e0-9d52-7452-eeaeab1cc292.jpg",alt:""}})]),t._v(" "),a("p",[t._v("执行 "),a("code",[t._v("obj.n=3")]),t._v("，此时为函数的形参即 022 中的 obj 来改变了对象内 n 的值。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://imgs-1251264059.coscd.myqcloud.com/f4c369d0-1ddd-e1a6-ef64-7b9614e94a2b.jpg",alt:""}})]),t._v(" "),a("p",[t._v("最关键的一步："),a("code",[t._v("var obj = {n:2};")]),t._v(" 由于对象命名的关系可能很多童鞋就会有点懵，但依然按照同样的方式来分析即可，由于使用了 var 那么就是新声明一个对象，从而会在栈中压入新的地址记作 033，其中存入了新的指针指向了新的对象 "),a("code",[t._v("{n:2}")]),t._v("。从而之后打印的 "),a("code",[t._v("console.log(obj.n)")]),t._v(" 结果则应是新开辟的对象中的 n 的值。")]),t._v(" "),a("p",[t._v("最后打印 "),a("code",[t._v("console.log(obj.n) //3")]),t._v(" 很显然，全局的对象有过一次更改其值为 3。")])])}),[],!1,null,null,null);s.default=e.exports}}]);