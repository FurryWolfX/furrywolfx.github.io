import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.a5795de3.js";const F=JSON.parse('{"title":"Node.js md5 中文支持","description":"","frontmatter":{"title":"Node.js md5 中文支持","catalog":true,"date":"2016-08-13T16:50:24.000Z","subtitle":null,"header-img":null,"tags":["JavaScript","NodeJS"]},"headers":[],"relativePath":"docs/nodejs/nodejs-md5-support-chinese.md","filePath":"docs/nodejs/nodejs-md5-support-chinese.md"}'),o={name:"docs/nodejs/nodejs-md5-support-chinese.md"},l=p(`<h1 id="node-js-md5-中文支持" tabindex="-1">Node.js md5 中文支持 <a class="header-anchor" href="#node-js-md5-中文支持" aria-label="Permalink to &quot;Node.js md5 中文支持&quot;">​</a></h1><p>遇到中文需要特殊处理</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> Buffer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;buffer&quot;</span><span style="color:#E1E4E8;">).Buffer;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> crypto </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;crypto&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">md5</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> buf </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Buffer</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> str </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> buf.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;binary&quot;</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 关键</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> crypto.</span><span style="color:#B392F0;">createHash</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;md5&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">update</span><span style="color:#E1E4E8;">(str).</span><span style="color:#B392F0;">digest</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;hex&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> Buffer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;buffer&quot;</span><span style="color:#24292E;">).Buffer;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> crypto </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;crypto&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">md5</span><span style="color:#24292E;">(</span><span style="color:#E36209;">data</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> buf </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Buffer</span><span style="color:#24292E;">(data);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> str </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> buf.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;binary&quot;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 关键</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> crypto.</span><span style="color:#6F42C1;">createHash</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;md5&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">update</span><span style="color:#24292E;">(str).</span><span style="color:#6F42C1;">digest</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;hex&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,3),e=[l];function t(r,c,E,y,i,d){return a(),n("div",null,e)}const m=s(o,[["render",t]]);export{F as __pageData,m as default};
