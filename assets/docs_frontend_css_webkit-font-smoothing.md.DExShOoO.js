import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.CWaimgAe.js";const g=JSON.parse('{"title":"让页面的字体变得更清晰（css 实现）","description":"","frontmatter":{"title":"让页面的字体变得更清晰（css 实现）","catalog":true,"date":"2018-01-19T16:50:24.000Z","subtitle":null,"header-img":null,"tags":["CSS"]},"headers":[],"relativePath":"docs/frontend/css/webkit-font-smoothing.md","filePath":"docs/frontend/css/webkit-font-smoothing.md"}'),e={name:"docs/frontend/css/webkit-font-smoothing.md"},t=n(`<h1 id="让页面的字体变得更清晰-css-实现" tabindex="-1">让页面的字体变得更清晰（css 实现） <a class="header-anchor" href="#让页面的字体变得更清晰-css-实现" aria-label="Permalink to &quot;让页面的字体变得更清晰（css 实现）&quot;">​</a></h1><h2 id="css3-属性-webkit-font-smoothing" tabindex="-1">css3 属性 -webkit-font-smoothing <a class="header-anchor" href="#css3-属性-webkit-font-smoothing" aria-label="Permalink to &quot;css3 属性 -webkit-font-smoothing&quot;">​</a></h2><p>对字体进行抗锯齿渲染可以使字体看起来会更清晰舒服。在图标字体成为一种趋势的今天，抗锯齿渲染使用也越来越多。<code>font-smoothing</code> 是非标准的 CSS 定义。它被列入标准规范的草案中，后由于某些原因从 web 标准中被移除了。但是，我们可以用以下两种定义进行抗锯齿渲染</p><h3 id="webkit-在自己的引擎中支持了这一效果。" tabindex="-1">Webkit 在自己的引擎中支持了这一效果。 <a class="header-anchor" href="#webkit-在自己的引擎中支持了这一效果。" aria-label="Permalink to &quot;Webkit 在自己的引擎中支持了这一效果。&quot;">​</a></h3><p><code>-webkit-font-smoothing</code> 它有三个属性值：</p><ol><li>none：对低像素的文本比较好</li><li>subpixel-antialiased：默认值</li><li>antialiased：抗锯齿很好</li></ol><p>具体代码</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -webkit-font-smoothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">antialiased</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>-moz-osx-font-smoothing: inherit | grayscale;</code> 这个属性也是更清晰的作用。</p><p>具体代码</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -webkit-font-smoothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">antialiased</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -moz-osx-font-smoothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grayscale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,11),l=[t];function o(p,h,r,c,d,k){return a(),i("div",null,l)}const m=s(e,[["render",o]]);export{g as __pageData,m as default};
